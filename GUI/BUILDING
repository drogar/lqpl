REQUIREMENTS:

lqpl_gui is written in JRuby/Java Swing. Building it will require an install
of JRuby 1.7.14.1, various JRuby tools, the 1.6 JDK and ant. We recommend
installing rvm (Ruby Version Manager) if you are on Linux or Apple.

Java and Java Tools:
  Required:
    - JDK 1.6 or 1.7 (Tested with Apple version 1.6 and OpenJDK 7)
    - ant (tested with version 1.8.2)


JRuby and associated tools:
  Highly suggested:
    - rvm (https://rvm.beginrescueend.com) (aka rvm.io)
  Required:
    - JRuby (version 1.7.14.1, using 1.9 syntax, tested)
    - Rake (Gem)
    - Bundler (Gem)
    - cucumber (Gem)
    - rspec (Gem)

Tool installation:

Apple:
    - You will need to install XCode and then select the preferences in XCode
      and install the command line tools.
    - Install rvm as noted above and then use it to install JRuby as per the
      documentation at the site. This will also install the gems Rake and
      Bundler.
    - Ensure JRuby is using 1.9 level syntax by either
            'export JRUBY_OPTS="--1.9"'
      or setting up an rvm hook as per the documentation at
            https://rvm.io/interpreters/jruby/
    - To do actual development, you need to install the monkeybars gem - but
      not the version at rubygems. So, add the source gems.neurogami.com to
      your gem sources list with "gem source -a http://gems.neurogami.com"
    - Finally, type 'bundle install' in the lqpl_gui directory and the
      required gems will be installed. You should see something similar
      to the following (dependencies and versions may change, of course)

-----------------------start of expected output----------------------------
Fetching gem metadata from http://rubygems.org/.......
Fetching gem metadata from http://gems.neurogami.com/.
Fetching full source index from http://gems.neurogami.com/
Fetching gem metadata from http://rubygems.org/.......
Using rake (0.9.2.2)
Installing builder (3.0.0)
Installing diff-lcs (1.1.3)
Installing json (1.6.6)
Installing gherkin (2.9.3)
Installing term-ansicolor (1.0.7)
Installing cucumber (1.1.9)
Installing hoe (3.0.3)
Installing rubyzip (0.9.7)
Installing s4t-utils (1.0.4)
Installing xml-simple (1.1.1)
Installing user-choices (1.1.6.1)
Installing rawr (1.6.3)
Installing swingset (0.3.0)
Installing monkeybars (1.1.1)
Installing rspec-core (2.9.0)
Installing rspec-expectations (2.9.1)
Installing rspec-mocks (2.9.0)
Installing rspec (2.9.0)
Using bundler (1.1.4)
Your bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.
Post-install message from cucumber:

(::) (::) (::) (::) (::) (::) (::) (::) (::) (::) (::) (::) (::) (::) (::)

Thank you for installing cucumber-1.1.9.
Please be sure to read http://wiki.github.com/cucumber/cucumber/upgrading
for important information about this release. Happy cuking!

(::) (::) (::) (::) (::) (::) (::) (::) (::) (::) (::) (::) (::) (::) (::)

-----------------------end of expected output----------------------------

Linux:
    - Use your package install manager to install a JDK and ant.
    - Either use your package manager to install JRuby or rvm, or install rvm
      directly. We recommend a direct install of rvm and using it to install
      JRuby as typically package versions are quite a ways behind.
    - Follow the above directions to get the correct bundles installed.

Windows:
    - Install Cygwin, then follow much of the above. Good luck :) - rvm.io has
      links to blogs on how to install rvm within cygwin.

BUILDING/RUNNING:

Type 'rake run:lqpl' at the command line when in the top level directory of the
project. This command will:
  - Compile the java classes and add the JRuby classes to a jar in the 'out' dir
  - Compile the Haskell servers and place their binaries in the 'out/bin' dir
  - Run the jar with the default java command.