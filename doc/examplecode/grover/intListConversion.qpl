#Import Prelude.qpl
intToZeroQubitList::(n:Int | ; nq:List(Qubit))= 
{ if  n == 0 => { nq  = Nil }
  else       => { nq' = intToZeroQubitList(n >> 1 |);
	          nq  = Cons(|0>, nq') }
}
qubitListToInt::(nq:List(Qubit) ; n:Int)= 
{ case nq of
    Nil => { n = 0}
    Cons(q, nq') => 
           { n' = qubitListToInt(nq');
             measure q of 
               |0> => {n1 = 0}
               |1> => {n1 = 1};
             use n1, n' in { n = n1 + (n' << 1) }   }
}     
