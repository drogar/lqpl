Name:                lqplEmulator
Version:             0.9.0
Stability:           Experimental
Synopsis:            Emulator for Linear-QPL
Description:         A server based emulator for Linear-QPL. LQPL is a functional
                     quantum programming language that allows people to experiment with and
                     visualize the effects of quantum algorithms. A separate GUI front end to the
                     compiler and emulator is available.
tested-with:         GHC
License:             BSD3
License-file:        ../LICENSE
Author:              Brett Giles, Robin Cockett
Maintainer:          brett.giles@ucalgary.ca
bug-reports:         mailto:brett.giles@ucalgary.ca
Stability:           Experimental
homepage:            http://pll.cpsc.ucalgary.ca/lqpl
Build-Type:          Simple
Cabal-Version:       >=1.9.2
--data-dir:            src
--data-files:          glade/qstack.glade
Test-Suite test-all
   type:             exitcode-stdio-1.0
   main-is:          Tests/RunTests.lhs
   build-depends:    base,parsec,network,HUnit,filepath,hspec
   hs-source-dirs:   src,../Common/src
Test-Suite parse-server-command-spec
   type:             exitcode-stdio-1.0
   main-is:          Spec/QServer/ParseServerCommandSpec.lhs
   build-depends:    base,parsec,network,HUnit,filepath,hspec,QuickCheck
   extensions:       CPP
   hs-source-dirs:   src,../Common/src
Test-Suite stack-to-xml-spec
   type:             exitcode-stdio-1.0
   main-is:          Spec/QServer/StackToXMLSpec.lhs
   build-depends:    base,parsec,network,HUnit,filepath,mtl,containers,array,hspec,directory,unix,process,QuickCheck
   extensions:       TypeSynonymInstances,FlexibleInstances,MultiParamTypeClasses,ExistentialQuantification,Rank2Types,ScopedTypeVariables,
                     FlexibleContexts,KindSignatures,Rank2Types,CPP
   hs-source-dirs:   src,../Common/src
Test-Suite mmap-to-xml-spec
   type:             exitcode-stdio-1.0
   main-is:          Spec/QServer/MMapToXMLSpec.lhs
   build-depends:    base,parsec,network,HUnit,filepath,mtl,containers,array,hspec,directory,unix,process,QuickCheck,random
   extensions:       TypeSynonymInstances,FlexibleInstances,Rank2Types,CPP
   hs-source-dirs:   src,../Common/src
Test-Suite code-to-xml-spec
   type:             exitcode-stdio-1.0
   main-is:          Spec/QServer/CodeToXMLSpec.lhs
   build-depends:    base,parsec,network,HUnit,filepath,mtl,containers,array,hspec,directory,unix,process,QuickCheck,random
   extensions:       TypeSynonymInstances,FlexibleInstances,Rank2Types,CPP
   hs-source-dirs:   src,../Common/src
Executable lqpl-emulator
  Main-is:           QServer/QServer.lhs
  Build-Depends:     base,filepath,array,containers,network,mtl,directory,parsec,random,text,bytestring,hspec
  hs-source-dirs:    src,../Common/src
  extensions:        FlexibleInstances,TypeSynonymInstances,MultiParamTypeClasses,Rank2Types
  Other-Modules:     Assembler.AssemLexer, Assembler.AssemParser, Paths_lqplemulator

-- Below is the former configuration for the GTK2HS GUI. This code is still included in the distribution
-- but may not currently compile. To try it out, comment out the following lines and the lines
-- starting with 'data-dir' and 'data-files' above.

--Executable lqpl-hgui
--  Main-is:           Emulator/QstackGTK.lhs
--  Build-Depends:     time,old-locale,random,containers,mtl,cairo==0.12.*,filepath,glib==0.12.*,gtk==0.12.*,base,array,directory
--  hs-source-dirs:    src
--  extensions:        FlexibleInstances,MultiParamTypeClasses,TypeSynonymInstances,ExistentialQuantification,
--                     Rank2Types,ScopedTypeVariables,FlexibleContexts,KindSignatures
--  Other-Modules:     Compiler.Qparser,Compiler.Qlexer,Assembler.AssemLexer, Assembler.AssemParser, Paths_lqpl
